Module 1: What is code? Reading and reflection. 
Module 1 Objective: To read and reflect on the nature of code and creation through digitized data and software. 
Read Article: https://www.bloomberg.com/graphics/2015-paul-ford-what-is-code/ 
Answer the following questions in a .txt file saved as What_is_code_reflection 
In your own words, what is a computer really doing whenever you type a letter on a keyboard? (150 words max) 
        The computer is constantly scanning the keyboard to see what the user will press. From there it goes through a process of steps to get the letter to the screen. Here is what happens. When you type any letter, the computer goes through a process, here is what happens. When any letter is pressed the computer pulls an image of the specific letter from its memory in a form of Binary keys which are 0, and 1. Every letter at its core is made up of a different combination of 0’s and 1’s. Here is the Binary code for the letter “a” 01000001. 
In your own words, how do computers use input and output to create experiences? (250 words max) 
        When a user enters data into a computer, which can be typing, speaking, and clicking. This data is called input, the return of what the user gets is output, this could be caused by speaking to SIRI or google to open up a command, or typing a letter on the keyboard, or even clicking the cursor to open a file up. Our causes are the input and the effect is the output (what the user sees).  However, I want to take this question a little further, because it is not that simple. There is an in-between of input and output, that is processing and storage. When you type a document in a word processor, here are the steps of what happens, the computer takes your input, processes it, stores the information in the built-in storage either an  SSD (solid-state drive) or HDD (hard disk drive), and then it outputs the information. By storing that information into its memory the users can access the information anytime.  
        
Explain why software products are essentially “infinitely reproducible nothings.” (150 words max) 
Software can be reproduced as many times as the company wants, before the competitor catches on. For instance a company can come out with new updates and charge customers over and over again. Until another company will start selling their software at a much cheaper price or even giving it away for free. It is at that point where that software becomes nothing or obsolete. Now the company would need the next software product that can do twice the work and handle much better than the previous software. 
Explain in your own words how code becomes software. (150 words max) 
         As we write scripts of code we build one after the next ultimately combining small parts to be a part of a bigger project. In this case, the software program is our end goal. The computer reads our code letter by letter, over a short time the code starts to make sense to the computer for there to be a response. This works by turning our code into “ an explicit list of instructions”. When we do this we are letting pieces of our code talk to one another in this way they are becoming one piece of code or one software. 
Explain “algorithms” in your own words. (150-word max) 
        We can think of algorithms as a formula for a solution big or small. The algorithm solves a problem, it gathers instructions into a list. Algorithms are made up of a sequence of steps, that when followed will give us a solution. There are many algorithms right in front of us, while we do these algorithms every day we don’t realize that what we are doing is an algorithm such as booking a movie ticket, or searching something on google. 
Explain the DRY principle. (100 words max) 
DRY or (Don’t Repeat Yourself) is a principle in programming that is encouraged to allow developers not to repeat themselves. But Why? By doing the DRY principle we don’t clutter our code with unnecessary scripts of repeated code. Duplicated code will make it harder for you to maintain your software in the future. 
In your own words, what is object-oriented programming? (100 words max) 
        Object-oriented programming (OOP) is a structural concept used in programming. It uses functions and data converts them into an object. In other words, your input in the object and so is your output. OOP used class to define it and attributes and methods. Why is this important to you, because it allows objects to interact with each other. This makes our software more dynamic, and adds more functionality. 
In your own words explain data and how it relates to code. (100 Words max) 
        After reading the article I come to learn that DATA is code, just used differently. What we are doing is using the DATA to manipulate to find solutions. According to the article we are creating more and more data and now we need to find ways to control it. In order to solve this problem or find a solution we need to input large sums or DATA and output solutions like databases. Which ultimately code at the end of the being stored into different objects and manipulated to fit the users liking. 


What is the framework? (150 words max) 
        A framework is a reusable software that can be used again and again to help you create your application. Once a piece of code has been written it doesn’t need to be written again. There are different Frameworks for different projects such as graphical frameworks for graphical applications, and web frameworks for web applications. Each framework performs different functionality. The reason why we do this is because it makes our projects easier, we won’t need to write something that has already been written. 
What is debugging? (150 words max) 
        Debugging is the process of reviewing your work. As a developer, you debug your code to find potential bugs and errors that cause your code to not work. Or display an error.  While you debug you’re essentially going through the code you wrote and attempting to clean up, add, or fix your code to allow it to run. 
Now, with more of an understanding of what code is, why do you want to learn how to code? (500 words max) 
        I have many reasons why I want to learn code, here are some of the big ones. We are surrounded by it, it’s all around us. Our day to day activity is filed with code, it is our future and it is paving the way to a new tomorrow. Learning to code in this day and age we can solve so many problems, and I feel that learning to code I can aid in helping to solve problems that still exist in our society. I also want to point out how dynamic this industry is since code is literally anywhere. There are so many places a developer can work at such as the medical field, automotive, finance, military to name a few the list is endless. I also like that we can grow in our own fields as we move up a ladder to new roles.  So the reason that I want to learn code is because it is a powerful skill to learn in today's day and age, you are more likely to become a valuable candidate in today's competitive job market, it can also teach you how to think in a more efficient manner. In world that is constantly surrounded by tech, understanding code is a way for us to learn about the world around us from a new set of lens.